{"ast":null,"code":"var _jsxFileName = \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\src\\\\components\\\\Notes\\\\NotesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { startSetNotes, startRemoveNote } from '../../actions/notesAction';\nimport Swal from 'sweetalert2';\nimport { startSetCategories } from '../../actions/categoriesAction';\n\nfunction NotesList(props) {\n  console.log(\"NOTES PROPS\", props);\n\n  if (props.notes.length == 0) {\n    props.dispatch(startSetCategories());\n    props.dispatch(startSetNotes());\n  }\n\n  var handleRemove = function handleRemove(id) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(function (result) {\n      if (result.value) {\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n        props.dispatch(startRemoveNote(id));\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, props.notes ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Notes-\", props.notes.length), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.notes.map(function (note) {\n    // console.log(\"props map note\",props.notes)\n    return React.createElement(\"tr\", {\n      key: note._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, note.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, note.description), props.categories.name !== 0 && React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, note.category.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, note.photoPath), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/edit/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"EDIT\"))), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: function onClick() {\n        handleRemove(note._id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"REMOVE\"))));\n  }))), React.createElement(Link, {\n    to: \"/notes/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" \", React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"ADD NOTE\"))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"loading\")));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.categories,\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps)(NotesList);","map":{"version":3,"sources":["E:/LAVANYA-DCT-FINAL-PROJECTS21/new-updated_notesapp-master/client/src/components/Notes/NotesList.js"],"names":["React","Link","connect","startSetNotes","startRemoveNote","Swal","startSetCategories","NotesList","props","console","log","notes","length","dispatch","handleRemove","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","map","note","_id","description","categories","name","category","photoPath","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,aAAR,EAAsBC,eAAtB,QAA4C,2BAA5C;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,kBAAT,QAAmC,gCAAnC;;AAGA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AACrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B;;AAEA,MAAGA,KAAK,CAACG,KAAN,CAAYC,MAAZ,IAAqB,CAAxB,EAA2B;AACvBJ,IAAAA,KAAK,CAACK,QAAN,CAAeP,kBAAkB,EAAjC;AACAE,IAAAA,KAAK,CAACK,QAAN,CAAeV,aAAa,EAA5B;AACH;;AAED,MAAMW,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAQ;AACzBV,IAAAA,IAAI,CAACW,IAAL,CAAU;AACNC,MAAAA,KAAK,EAAE,eADD;AAENC,MAAAA,IAAI,EAAE,mCAFA;AAGNC,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,gBAAgB,EAAE,IAJZ;AAKNC,MAAAA,kBAAkB,EAAE,SALd;AAMNC,MAAAA,iBAAiB,EAAE,MANb;AAONC,MAAAA,iBAAiB,EAAE;AAPb,KAAV,EASGC,IATH,CASQ,UAACC,MAAD,EAAY;AAChB,UAAIA,MAAM,CAACC,KAAX,EAAkB;AAChBrB,QAAAA,IAAI,CAACW,IAAL,CACE,UADF,EAEE,6BAFF,EAGE,SAHF;AAKAR,QAAAA,KAAK,CAACK,QAAN,CAAeT,eAAe,CAACW,EAAD,CAA9B;AACD;AAEF,KAnBH;AAoBH,GArBD;;AAuBI,SACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAESP,KAAK,CAACG,KAAN,GAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWH,KAAK,CAACG,KAAN,CAAYC,MAAvB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQJ,KAAK,CAACG,KAAN,CAAYgB,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACpB;AACA,WAAO;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,IAAI,CAACX,KAAV,CADO,EAEP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKW,IAAI,CAACE,WAAV,CAFO,EAIVtB,KAAK,CAACuB,UAAN,CAAiBC,IAAjB,KAA2B,CAA3B,IACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACK,QAAL,CAAcD,IAAnB,CALU,EAWP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,IAAI,CAACM,SAAV,CAXO,EAYP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,IAAD;AAAM,MAAA,EAAE,wBAAiBN,IAAI,CAACC,GAAtB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAAJ,CAZO,EAgBP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAQ,MAAA,OAAO,EAAE,mBAAK;AAClBf,QAAAA,YAAY,CAACc,IAAI,CAACC,GAAN,CAAZ;AACH,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,CAAJ,CAhBO,CAAP;AAuBF,GAzBF,CAFR,CADN,CAFF,EAkCR,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,YAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvB,CAlCQ,CAFH,GAuCG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAzCZ,CADR;AAmDH;;AACJ,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAChC,SAAO;AACHL,IAAAA,UAAU,EAACK,KAAK,CAACL,UADd;AAEHpB,IAAAA,KAAK,EAAEyB,KAAK,CAACzB;AAFV,GAAP;AAKH,CANA;;AAOD,eAAeT,OAAO,CAACiC,eAAD,CAAP,CAAyB5B,SAAzB,CAAf","sourcesContent":["import React from 'react' \nimport  {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {startSetNotes,startRemoveNote} from '../../actions/notesAction'\nimport Swal from 'sweetalert2'\nimport { startSetCategories } from '../../actions/categoriesAction';\n\n\nfunction NotesList(props){\n    console.log(\"NOTES PROPS\", props)\n\n    if(props.notes.length== 0) {\n        props.dispatch(startSetCategories())\n        props.dispatch(startSetNotes())\n    }\n    \n    const handleRemove = (id) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          })\n          .then((result) => {\n            if (result.value) {\n              Swal.fire(\n                'Deleted!',\n                'Your file has been deleted.',\n                'success'\n              )\n              props.dispatch(startRemoveNote(id))\n            }\n            \n          })\n    }\n\n        return(\n                <div>\n                    {\n                         props.notes? \n                        (\n                            <div>\n                              <h2>Notes-{props.notes.length}</h2>\n                              <table >\n                                    <tbody>\n                                        {\n                                            props.notes.map(note => {\n                                                // console.log(\"props map note\",props.notes)\n                                                return <tr key={note._id}>\n                                                <td>{note.title}</td>\n                                                <td>{note.description}</td>\n                                                {/* {console.log(\"categories name\",props.categories.name)} */}\n                                           { props.categories.name !==  0 && \n                                            (<td>{note.category.name}</td>)}\n                                                {/* {console.log(\"p\",note.category.name)} */}\n                                                 {/* <td><Link to={`/notes/edit/${note._id}`}>\n                                                        <button>EDIT</button>\n                                                    </Link>\n                                                </td> */}\n                                                <td>{note.photoPath}</td>\n                                                <td><Link to={`/notes/edit/${note._id}`}>\n                                                        <button>EDIT</button>\n                                                    </Link>\n                                                </td>\n                                                <td><Link to=\"/notes\">\n                                                    <button onClick={() =>{\n                                                        handleRemove(note._id)\n                                                    }}>REMOVE</button>\n                                                    </Link>\n                                                </td>\n                                                </tr> \n                                             })\n                                        }\n                                    </tbody>\n                                </table>\n                    <Link to=\"/notes/new\"> <button>ADD NOTE</button></Link>\n                            </div>\n                        ) : (\n                            <div>\n                                <p>loading</p>\n                            </div>\n                        )\n                    }\n                </div>\n            )\n\n\n    }\n const mapStateToProps = (state) => {\n    return {\n        categories:state.categories,\n        notes: state.notes, \n   }\n\n}\nexport default connect(mapStateToProps)(NotesList)\n"]},"metadata":{},"sourceType":"module"}