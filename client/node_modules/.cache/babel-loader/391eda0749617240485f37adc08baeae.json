{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\sony\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar notesInitialState = [];\n\nvar notesReducer = function notesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : notesInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_NOTES':\n      {\n        return _toConsumableArray(action.payload);\n      }\n\n    case 'ADD_NOTES':\n      {\n        return [].concat(_toConsumableArray(state), [action.payload]);\n      }\n\n    case 'REMOVE_NOTES':\n      {\n        return state.filter(function (note) {\n          return note._id !== action.payload;\n        });\n      }\n\n    case 'EDIT_NOTES':\n      {\n        return state.map(function (note) {\n          if (note._id == action.payload._id) {\n            return action.payload;\n          } else {\n            return note;\n          }\n        });\n      }\n\n    default:\n      {\n        return _toConsumableArray(state);\n      }\n  }\n};\n\nexport default notesReducer;","map":{"version":3,"sources":["E:/LAVANYA-DCT-FINAL-PROJECTS21/new-updated_notesapp-master/client/src/reducers/notesReducer.js"],"names":["notesInitialState","notesReducer","state","action","type","payload","filter","note","_id","map"],"mappings":";AAAA,IAAMA,iBAAiB,GAAG,EAA1B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAuC;AAAA,MAAtCC,KAAsC,uEAA9BF,iBAA8B;AAAA,MAAXG,MAAW;;AACxD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,WAAL;AAAkB;AACd,kCAAWD,MAAM,CAACE,OAAlB;AACH;;AAED,SAAK,WAAL;AAAkB;AACd,4CAAWH,KAAX,IAAkBC,MAAM,CAACE,OAAzB;AACH;;AACD,SAAK,cAAL;AAAqB;AACjB,eAAOH,KAAK,CAACI,MAAN,CAAa,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAxB;AAAA,SAAjB,CAAP;AACH;;AAED,SAAK,YAAL;AAAoB;AAChB,eAAOH,KAAK,CAACO,GAAN,CAAU,UAAAF,IAAI,EAAE;AACnB,cAAGA,IAAI,CAACC,GAAL,IAAYL,MAAM,CAACE,OAAP,CAAeG,GAA9B,EAAkC;AAC9B,mBAAOL,MAAM,CAACE,OAAd;AACH,WAFD,MAGI;AACA,mBAAOE,IAAP;AACH;AACJ,SAPM,CAAP;AAQH;;AACD;AAAS;AACL,kCAAWL,KAAX;AACH;AAxBL;AA2BH,CA5BD;;AA6BA,eAAeD,YAAf","sourcesContent":["const notesInitialState = []\n\nconst notesReducer = (state = notesInitialState, action) => {\n    switch (action.type) {\n        case 'SET_NOTES': {\n            return [...action.payload]\n        }\n\n        case 'ADD_NOTES': {\n            return [...state, action.payload]\n        }\n        case 'REMOVE_NOTES': {\n            return state.filter(note => note._id !== action.payload)\n        }\n\n        case 'EDIT_NOTES' : {\n            return state.map(note=>{\n                if(note._id == action.payload._id){\n                    return action.payload\n                }\n                else{\n                    return note\n                }\n            })\n        }\n        default: {\n            return [...state]\n        }\n\n    }\n}\nexport default notesReducer\n\n"]},"metadata":{},"sourceType":"module"}