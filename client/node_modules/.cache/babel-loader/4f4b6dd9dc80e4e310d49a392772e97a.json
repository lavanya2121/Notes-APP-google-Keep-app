{"ast":null,"code":"var _jsxFileName = \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\src\\\\components\\\\Notes\\\\NotesList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { startSetNotes, startRemoveNote } from '../../actions/notesAction';\nimport Swal from 'sweetalert2';\nimport { startSetCategories } from '../../actions/categoriesAction'; //material-ui\n\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Container } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction NotesList(props) {\n  //console.log(\"NOTES PROPS\", props)\n  if (props.notes.length == 0) {\n    props.dispatch(startSetCategories());\n    props.dispatch(startSetNotes());\n  }\n\n  var handleRemove = function handleRemove(id) {\n    Swal.fire({\n      title: 'Are you sure?',\n      text: \"You won't be able to revert this!\",\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes, delete it!'\n    }).then(function (result) {\n      if (result.value) {\n        Swal.fire('Deleted!', 'Your file has been deleted.', 'success');\n        props.dispatch(startRemoveNote(id));\n      }\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Container, {\n    maxWidth: \"md\",\n    style: {\n      backgroundColor: \"white\",\n      float: \"left\",\n      margin: \"3px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, props.notes ? React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Listing Notes-\", props.notes.length)), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/notes/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(NoteAddIcon, {\n    titleAccess: \"Add Note\",\n    style: {\n      marginTop: \"23px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    lg: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, props.notes && props.notes.map(function (note) {\n    return React.createElement(Card, {\n      key: note._id,\n      style: {\n        backgroundColor: \"pink\",\n        float: \"left\",\n        margin: \"3px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, note.title), React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Description : \", note.description), props.categories.name !== 0 && React.createElement(Typography, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \" Category :\", note.category.name), React.createElement(Grid, {\n      container: true,\n      style: {\n        marginTop: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes/edit/\".concat(note._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(EditIcon, {\n      titleAccess: \"Edit Note\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }))), React.createElement(Grid, {\n      item: true,\n      xs: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/notes\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(DeleteIcon, {\n      titleAccess: \"Delete Note\",\n      onClick: function onClick() {\n        handleRemove(note._id);\n      },\n      style: {\n        marginBottom: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))))));\n  }))) : React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"loading\"))));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    categories: state.categories,\n    //first must be categories n then notes\n    notes: state.notes\n  };\n};\n\nexport default connect(mapStateToProps)(NotesList);","map":{"version":3,"sources":["E:/LAVANYA-DCT-FINAL-PROJECTS21/new-updated_notesapp-master/client/src/components/Notes/NotesList.js"],"names":["React","Link","connect","startSetNotes","startRemoveNote","Swal","startSetCategories","Card","Typography","CardContent","Container","Grid","NoteAddIcon","DeleteIcon","EditIcon","NotesList","props","notes","length","dispatch","handleRemove","id","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","value","backgroundColor","float","margin","textAlign","marginTop","map","note","_id","description","categories","name","category","marginBottom","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react' \nimport  {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {startSetNotes,startRemoveNote} from '../../actions/notesAction'\nimport Swal from 'sweetalert2'\nimport { startSetCategories } from '../../actions/categoriesAction';\n\n//material-ui\nimport Card from '@material-ui/core/Card';\nimport Typography from '@material-ui/core/Typography';\nimport CardContent from '@material-ui/core/CardContent';\nimport { Container } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\n\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\nfunction NotesList(props){\n    //console.log(\"NOTES PROPS\", props)\n\n    if(props.notes.length== 0) {\n        props.dispatch(startSetCategories())\n        props.dispatch(startSetNotes())\n    }\n    \n    const handleRemove = (id) => {\n        Swal.fire({\n            title: 'Are you sure?',\n            text: \"You won't be able to revert this!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Yes, delete it!'\n          })\n          .then((result) => {\n            if (result.value) {\n              Swal.fire(\n                'Deleted!',\n                'Your file has been deleted.',\n                'success'\n              )\n              props.dispatch(startRemoveNote(id))\n            }\n            \n          })\n    }\n\n        return(\n                <div>\n                     <Container maxWidth=\"md\" \n                                style={{ backgroundColor:\"white\",\n                                         float : \"left\",\n                                         margin:\"3px\"\n                                        }}\n                     >\n                    {\n                         props.notes? \n                        (\n                            <Container>\n                              <Grid container>\n                                    <Grid item xs={6}>\n\n                                        <h2 style={{textAlign:\"center\"}}>\n                                        Listing Notes-{props.notes.length}\n                                        </h2>\n\n                                     </Grid>\n                                     <Grid item xs={6}>\n                                          <Link to=\"/notes/new\">\n                                             <NoteAddIcon titleAccess=\"Add Note\" \n                                                          style={{marginTop : \"23px\"}}\n                                        />\n                                    </Link>\n                                   </Grid>\n                                </Grid>\n                                <Grid item lg={12}>\n                                {\n                                  props.notes &&  props.notes.map(note => {\n                                        return <Card key={note._id} \n                                                     style={{ backgroundColor:\"pink\",\n                                                              float : \"left\",\n                                                              margin:\"3px\"\n                                                            }}\n                                                >\n                                                <CardContent >\n                                                    <h2>{note.title}</h2>\n                                                    <Typography>Description : {note.description}</Typography>\n\n                                                    { props.categories.name !==  0 && \n                                                    (<Typography> Category :{note.category.name}</Typography>)}\n\n                                                <Grid container style = {{marginTop : \"20px\"}}>\n\n                                                    <Grid item xs={6}>\n                                                        <Link to={`/notes/edit/${note._id}`}>\n                                                            <EditIcon titleAccess=\"Edit Note\" />\n                                                        </Link>\n                                                    </Grid>\n\n                                                    <Grid item xs={6}>\n                                                       <Link to=\"/notes\">\n                                                        <DeleteIcon titleAccess=\"Delete Note\"\n                                                                onClick={() =>{\n                                                                    handleRemove(note._id)\n                                                            }} \n                                                            style={{marginBottom:\"20px\"}}  \n                                                        />\n                                                    </Link>\n                                               </Grid>\n                                       </Grid>\n                                        </CardContent>\n                                    </Card> \n                                     })\n                                }\n                            </Grid>\n                            </Container>\n                        ) : (\n                            <div>\n                                <p>loading</p>\n                            </div>\n                        )\n                    }\n                    </Container>\n                </div>\n            )\n\n\n    }\n const mapStateToProps = (state) => {\n    return {\n        categories:state.categories,//first must be categories n then notes\n        notes: state.notes,\n        \n       \n   }\n\n}\nexport default connect(mapStateToProps)(NotesList)\n\n"]},"metadata":{},"sourceType":"module"}