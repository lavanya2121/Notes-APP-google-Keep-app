{"ast":null,"code":"import _defineProperty from \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\src\\\\components\\\\Notes\\\\Form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { noteFind } from '../../selectors/notesSelector'; // const customStyles = {\n//     border: '1px solid hsl(0,0%,80%)',\n//     borderRadius: '4px',\n//     padding: '5px',\n//     backgroundColor: 'white'\n// }\n\nvar NoteForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(NoteForm, _React$Component);\n\n  function NoteForm(props) {\n    var _this;\n\n    _classCallCheck(this, NoteForm);\n\n    console.log('Note Form', props);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NoteForm).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.handleImageChange = function (e) {\n      _this.setState({\n        image: e.target.files[0]\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var formData = {\n        title: _this.state.title,\n        description: _this.state.description,\n        category: _this.state.category\n      }; // const form = new FormData()\n      // form.append('image', this.state.image)\n      // for (let key in formData) {\n      //     form.append(key, formData[key])\n      // }\n\n      _this.props.handleSubmit(formData);\n    };\n\n    _this.state = {\n      title: props.notes ? props.notes.title : '',\n      description: props.notes ? props.notes.description : '',\n      image: null,\n      category: props.notes ? props.notes.category._id : ''\n    };\n    return _this;\n  }\n\n  _createClass(NoteForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"title\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        onChange: this.handleChange,\n        value: this.state.title,\n        name: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"description\"), React.createElement(\"textarea\", {\n        id: \"description\",\n        onChange: this.handleChange,\n        value: this.state.description,\n        name: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"category\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"category\"), React.createElement(\"select\", {\n        id: \"category\",\n        value: this.state.category,\n        className: \"form-control\",\n        name: \"category\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        defaultValue: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"select\"), this.props.category ? this.props.category.map(function (category) {\n        return React.createElement(\"option\", {\n          key: category._id,\n          value: category._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, category.name);\n      }) : 'loading'), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return NoteForm;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  var id = props.match.params.id;\n  return {\n    category: state.categories,\n    notes: noteFind(state.notes, id)\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(NoteForm));","map":{"version":3,"sources":["E:/LAVANYA-DCT-FINAL-PROJECTS21/new-updated_notesapp-master/client/src/components/Notes/Form.js"],"names":["React","connect","withRouter","noteFind","NoteForm","props","console","log","handleChange","e","setState","target","name","value","handleImageChange","image","files","handleSubmit","preventDefault","formData","title","state","description","category","notes","_id","map","Component","mapStateToProps","id","match","params","categories"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom'\nimport {noteFind} from '../../selectors/notesSelector'\n\n// const customStyles = {\n//     border: '1px solid hsl(0,0%,80%)',\n//     borderRadius: '4px',\n//     padding: '5px',\n//     backgroundColor: 'white'\n// }\n\nclass NoteForm extends React.Component {\n    constructor(props){\n        console.log('Note Form',props)\n        super(props)\n        this.state = {\n            title:props.notes ? props.notes.title : '',\n            description:props.notes ? props.notes.description : '',\n            image:null,\n            category:props.notes ? props.notes.category._id :'',\n            \n        }\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    handleImageChange = (e) => {\n        this.setState({image: e.target.files[0]})\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const formData = {\n            title:this.state.title,\n            description:this.state.description,\n            category : this.state.category\n\n        }\n        // const form = new FormData()\n        // form.append('image', this.state.image)\n        // for (let key in formData) {\n        //     form.append(key, formData[key])\n        // }\n        this.props.handleSubmit(formData)\n    }\n\n    render(){\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    \n                        <label htmlFor=\"title\">title</label>\n                        <input type=\"text\"  id=\"title\" \n                        onChange={this.handleChange} value={this.state.title} \n                        name=\"title\" /><br/>\n                   \n\n                   \n                        <label htmlFor=\"description\">description</label>\n                        <textarea  id=\"description\" \n                        onChange={this.handleChange} value={this.state.description} \n                        name=\"description\"></textarea><br/>\n                  \n\n                        <label htmlFor=\"category\">category</label>\n                        <select id=\"category\" value={this.state.category} \n                        className=\"form-control\" \n                        name=\"category\" onChange={this.handleChange}>\n                            <option defaultValue>select</option>\n                            {\n                                this.props.category ? this.props.category.map(category=>{\n                                    return (<option key={category._id} value={category._id}>\n                                        {category.name}</option>)\n                                }) : 'loading'\n                            }\n                        </select>\n                        <br/>\n\n                    <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id=props.match.params.id\n    return {\n        category:state.categories,\n        notes : noteFind(state.notes,id),\n       \n    }\n}\n\nexport default withRouter(connect(mapStateToProps)(NoteForm))\n"]},"metadata":{},"sourceType":"module"}