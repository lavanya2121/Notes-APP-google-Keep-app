{"ast":null,"code":"import axios from '../config/axios';\nimport Swal from 'sweetalert2'; //list\n\nexport var setNotes = function setNotes(notes) {\n  return {\n    type: 'SET_NOTES',\n    payload: notes\n  };\n};\nexport var startSetNotes = function startSetNotes() {\n  return function (dispatch) {\n    axios.get('/notes', {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(function (response) {\n      console.log('notes list response from the server', response.data);\n      var notes = response.data;\n      dispatch(setNotes(notes));\n    });\n  };\n}; // add\n\nexport var addNote = function addNote(note) {\n  return {\n    type: 'ADD_NOTES',\n    payload: note\n  };\n};\nexport var startAddNote = function startAddNote(obj) {\n  console.log('add form', obj.formData);\n  return function (dispatch) {\n    axios.post('/notes', obj.formData, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(function (response) {\n      console.log('Note add response from the server', response.data);\n      Swal.fire('Added', 'Note Successfully created', 'success'); //  const note= response.data\n      // dispatch(addNote(note))\n\n      dispatch(startSetNotes()); //must be startSetNotes()\n\n      Swal.fire({\n        title: 'Success!',\n        text: 'You have successfully added a note',\n        icon: 'success',\n        confirmButtonText: 'Ok'\n      });\n      obj.redirect();\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}; //remove\n\nexport var removeNote = function removeNote(id) {\n  return {\n    type: 'REMOVE_NOTES',\n    payload: id\n  };\n};\nexport var startRemoveNote = function startRemoveNote(id) {\n  return function (dispatch) {\n    axios.delete(\"/notes/\".concat(id), {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(function (response) {\n      console.log('remove note response from the server', response.data);\n      var notes = response.data;\n      dispatch(removeNote(notes._id));\n      Swal.fire({\n        title: 'Success!',\n        text: 'You have successfully removed/deleted the note',\n        icon: 'success',\n        confirmButtonText: 'Ok'\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}; //edit\n\nexport var editNote = function editNote(note) {\n  return {\n    type: \"EDIT_NOTES\",\n    payload: note\n  };\n};\nexport var startEditNote = function startEditNote(formData, id, redirect) {\n  return function (dispatch) {\n    axios.put(\"/notes/\".concat(id), formData, {\n      headers: {\n        'x-auth': localStorage.getItem('authToken')\n      }\n    }).then(function (response) {\n      console.log('note edit response from the server', response.data);\n      var note = response.data;\n      dispatch(editNote(note));\n      Swal.fire({\n        title: 'Success!',\n        text: 'You have successfully updated the note',\n        icon: 'success',\n        confirmButtonText: 'Ok'\n      });\n      dispatch(startSetNotes()); //imp\n\n      redirect();\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["E:/LAVANYA-DCT-FINAL-PROJECTS21/new-updated_notesapp-master/client/src/actions/notesAction.js"],"names":["axios","Swal","setNotes","notes","type","payload","startSetNotes","dispatch","get","headers","localStorage","getItem","then","response","console","log","data","addNote","note","startAddNote","obj","formData","post","fire","title","text","icon","confirmButtonText","redirect","catch","err","removeNote","id","startRemoveNote","delete","_id","editNote","startEditNote","put"],"mappings":"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","sourcesContent":["import axios from '../config/axios'\nimport Swal from 'sweetalert2';\n\n//list\nexport const setNotes = (notes) => {\n    return { \n        type: 'SET_NOTES', \n        payload: notes \n    }\n}\n\nexport const startSetNotes = () => {\n    return (dispatch) => {\n        axios.get('/notes',{\n            headers : {\n                'x-auth' : localStorage.getItem('authToken')\n            }\n        })\n        .then((response) => {\n                console.log('notes list response from the server',response.data)\n                const notes = response.data\n                dispatch(setNotes(notes))\n            })\n    }\n}\n\n// add\nexport const addNote= (note) => {\n    return { \n        type: 'ADD_NOTES', \n        payload: note \n    }\n}\n\nexport const startAddNote = (obj) => {\n    console.log('add form',obj.formData)\n    return (dispatch) => {\n        axios.post('/notes', obj.formData,{\n            headers : {\n                'x-auth' : localStorage.getItem('authToken')\n            }\n        })\n        .then((response) => {\n                console.log('Note add response from the server',response.data)\n                Swal.fire(\n                    'Added',\n                    'Note Successfully created',\n                    'success'\n                )\n                //  const note= response.data\n                // dispatch(addNote(note))\n                dispatch(startSetNotes())//must be startSetNotes()\n                Swal.fire({\n                    title: 'Success!',\n                    text: 'You have successfully added a note',\n                    icon: 'success',\n                    confirmButtonText: 'Ok'\n                })\n                obj.redirect()\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n}\n\n //remove\nexport const removeNote = (id) => {\n    return { \n        type: 'REMOVE_NOTES', \n        payload: id \n    }\n}\n\nexport const startRemoveNote = (id) => {\n    return (dispatch) => {\n        axios.delete(`/notes/${id}`,{\n            headers : {\n                'x-auth' : localStorage.getItem('authToken')\n            }\n        })\n        .then((response) => {\n                console.log('remove note response from the server',response.data)\n                const notes = response.data\n                dispatch(removeNote(notes._id))\n                Swal.fire({\n                    title: 'Success!',\n                    text: 'You have successfully removed/deleted the note',\n                    icon: 'success',\n                    confirmButtonText: 'Ok'\n                })\n            })\n            .catch((err)=>{\n                console.log(err)\n            })\n    }\n}\n\n//edit\nexport const editNote = (note) => {\n    return {\n        type : \"EDIT_NOTES\" , \n        payload : note\n    }\n}\n\nexport const startEditNote = (formData, id, redirect) =>{\n    return(dispatch) =>{\n        axios.put(`/notes/${id}`, formData,{\n            headers : {\n                'x-auth' : localStorage.getItem('authToken')\n            }\n        })\n        .then((response) => {\n            console.log('note edit response from the server',response.data)\n            const note = response.data\n            dispatch(editNote(note))\n            Swal.fire({\n                title: 'Success!',\n                text: 'You have successfully updated the note',\n                icon: 'success',\n                confirmButtonText: 'Ok'\n            })\n            dispatch(startSetNotes())//imp\n            redirect()\n        })\n        .catch((err) => {\n            console.log(err)\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}