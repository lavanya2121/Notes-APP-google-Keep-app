{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\sony\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nvar categoriesInitialState = []; //reducers always returns a new state,state changes components are rerenderd\n\nvar categoriesReducer = function categoriesReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : categoriesInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_CATEGORIES':\n      {\n        //list categories\n        return _toConsumableArray(action.payload);\n      }\n\n    case 'ADD_CATEGORIES':\n      {\n        return [].concat(_toConsumableArray(state), [action.payload]);\n      }\n\n    case 'REMOVE_CATEGORIES':\n      {\n        return state.filter(function (category) {\n          return category._id !== action.payload;\n        });\n      }\n\n    case 'UPDATE_CATEGORIES':\n      {\n        return state.map(function (category) {\n          if (category._id == action.payload._id) {\n            return action.payload;\n          } else {\n            return category;\n          }\n        });\n      }\n\n    default:\n      {\n        return _toConsumableArray(state);\n      }\n  }\n};\n\nexport default categoriesReducer;","map":{"version":3,"sources":["E:/LAVANYA-DCT-FINAL-PROJECTS21/new-updated_notesapp-master/client/src/reducers/categoriesReducer.js"],"names":["categoriesInitialState","categoriesReducer","state","action","type","payload","filter","category","_id","map"],"mappings":";AAAA,IAAMA,sBAAsB,GAAG,EAA/B,C,CAEA;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAA4C;AAAA,MAA3CC,KAA2C,uEAAnCF,sBAAmC;AAAA,MAAXG,MAAW;;AAClE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AAAuB;AAAC;AACpB,kCAAWD,MAAM,CAACE,OAAlB;AACH;;AAED,SAAK,gBAAL;AAAuB;AACnB,4CAAWH,KAAX,IAAkBC,MAAM,CAACE,OAAzB;AACH;;AAED,SAAK,mBAAL;AAA0B;AACtB,eAAOH,KAAK,CAACI,MAAN,CAAa,UAAAC,QAAQ;AAAA,iBAAIA,QAAQ,CAACC,GAAT,KAAiBL,MAAM,CAACE,OAA5B;AAAA,SAArB,CAAP;AACH;;AAED,SAAK,mBAAL;AAA2B;AACvB,eAAOH,KAAK,CAACO,GAAN,CAAU,UAAAF,QAAQ,EAAE;AACvB,cAAGA,QAAQ,CAACC,GAAT,IAAgBL,MAAM,CAACE,OAAP,CAAeG,GAAlC,EAAsC;AAClC,mBAAOL,MAAM,CAACE,OAAd;AACH,WAFD,MAGI;AACA,mBAAOE,QAAP;AACH;AACJ,SAPM,CAAP;AAQH;;AACD;AAAS;AACL,kCAAWL,KAAX;AACH;AAzBL;AA4BH,CA7BD;;AA8BA,eAAeD,iBAAf","sourcesContent":["const categoriesInitialState = []\n\n//reducers always returns a new state,state changes components are rerenderd\nconst categoriesReducer = (state = categoriesInitialState, action) => {\n    switch (action.type) {\n        case 'SET_CATEGORIES': {//list categories\n            return [...action.payload]\n        }\n        \n        case 'ADD_CATEGORIES': {\n            return [...state, action.payload]\n        }\n\n        case 'REMOVE_CATEGORIES': {\n            return state.filter(category => category._id !== action.payload)\n        }\n\n        case 'UPDATE_CATEGORIES' : {\n            return state.map(category=>{\n                if(category._id == action.payload._id){\n                    return action.payload\n                }\n                else{\n                    return category\n                }\n            })\n        }\n        default: {\n            return [...state]\n        }\n\n    }\n}\nexport default categoriesReducer"]},"metadata":{},"sourceType":"module"}