{"ast":null,"code":"var _jsxFileName = \"E:\\\\LAVANYA-DCT-FINAL-PROJECTS21\\\\new-updated_notesapp-master\\\\client\\\\src\\\\App.js\";\n// import React from 'react'\n// import NotesList from './note/List'\n// function App(){\n// return(\n//     <div>\n//         <h2>Note App</h2>\n//         <NotesList/>\n//     </div>\n// )\n// }\n// export default App\n//Referal code to be added\n// import React from 'react'\n// import { BrowserRouter, Route, Link,Switch} from 'react-router-dom'\n// import {connect} from 'react-redux'\n// import CategoriesList from './components/Categories/CategoriesList'\n// import CategoriesNew from './components/Categories/CategoriesNew'\n// import CategoriesEdit from './components/Categories/CategoriesEdit'\n// import CategoriesShow from './components/Categories/CategoriesShow'\n// import NotesList from './components/Notes/NotesList'\n// import NotesNew from './components/Notes/NoteNew'\n// import NotesEdit from './components/Notes/NotesEdit'\n// import NotesShow from './components/Notes/NoteShow'\n// import Home from './components/Users/Home'\n// import Register from './components/Users/Register'\n// import Login from './components/Users/Login'\n// import Account from './components/Users/Account'\n// import { startLogout } from './actions/userAction'\n// function App(props){\n//     console.log('app',props)\n// const handleLogout = () => {\n//     const status = window.confirm('are you sure to logout')\n//     if(status){\n//     props.dispatch(startLogout())\n//     }\n//   }\n// return(\n//     <BrowserRouter>\n//      {console.log(\"props\",props.user)}\n//     <div>\n//     <h2>WELCOME TO NOTES APP</h2>\n//     <Link to=\"/\">Home</Link>\n//      {/* <Link to='/categories'>categories</Link>\n//      <Link to='/notes'>Notes</Link> */}\n//  {\n//                 Object.keys(props.user).length == 0 ? (\n//                     <div>\n//                        <Link to=\"/register\">Register</Link>\n//                        <Link to=\"/login\">Login</Link> \n//                         {/* <Login /> */}\n//                     </div>\n//                 ) : (\n//                         <div>\n//                             <Link to=\"/account\">Account</Link>\n//                             {/* <Link to='/notes'>Notes</Link> */}\n//                              <Link to='/categories'>Categories</Link>\n//                              <Link to='/notes'>Notes</Link>\n//                             <Link to=\"#\" onClick={()=>{\n//                                 handleLogout()//inline function\n//                             }}>Logout</Link>\n//                         </div>\n//                     )\n//             }\n//      </div>\n//     <Switch>\n//      <Route path=\"/\" component={Home} exact={true} />\n//      <Route path=\"/register\" component={Register} exact={true} />\n//       <Route path=\"/login\" component={Login} />\n//       <Route path=\"/account\" component={Account} />\n//      <Route path=\"/categories\" component={CategoriesList} exact={true} />\n//      <Route path=\"/categories/new\" component={CategoriesNew}/>\n//      <Route path='/notes' component={NotesList} exact={true}/>\n//      <Route path=\"/notes/new\" component={NotesNew}/>\n//      <Route path=\"/categories/edit/:id\" component={CategoriesEdit} />\n//      {/* <Route path=\"/categories/:id\" component={CategoriesShow} /> */}\n//      <Route path=\"/notes/edit/:id\" component={NotesEdit} />\n//      {/* <Route path=\"/notes/:id\" component={NotesShow} /> */}\n//      </Switch>\n//     </BrowserRouter>\n// )\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//       user : state.user\n//     }\n//   }\n//   export default connect(mapStateToProps)(App)\nimport React from 'react';\nimport { Link, BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { startLogout } from './actions/userAction'; //users imports\n\nimport Home from './components/Users/Home';\nimport Register from './components/Users/Register';\nimport Login from './components/Users/Login';\nimport Account from './components/Users/Account'; //categories import\n\nimport CategoriesList from './components/Categories/CategoriesList'; //1)list\n\nimport CategoriesShow from './components/Categories/CategoriesShow'; //2)show\n\nimport CategoriesNew from './components/Categories/CategoriesNew'; //3)New\n\nimport CategoriesEdit from './components/Categories/CategoriesEdit'; //4)Edit\n\nimport NotesList from './components/Notes/NotesList';\nimport NotesShow from './components/Notes/NoteShow';\nimport NotesNew from './components/Notes/NoteNew';\nimport NotesEdit from './components/Notes/NotesEdit';\n\nfunction App(props) {\n  console.log('App Component Props', props);\n\n  var handleLogout = function handleLogout() {\n    var status = window.confirm('are you sure to logout');\n\n    if (status) {\n      props.dispatch(startLogout());\n    }\n  };\n\n  return React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }, \"Welcome to App Component\"), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Home\"), //conditinal rendering to chk whether user has logged in  or not\n  //if user obj is empty means user has not logged in so we need to show only register n login(user object is 0 for the very first time)\n  Object.keys(props.user).length == 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/users/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, \"Register\"), React.createElement(Link, {\n    to: \"/users/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, \"Login\")) : //if the user obj is not empty ie we get some value(user obj value) then user has logged in to the application n the length is 3 username ,email n password\n  React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/users/account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"Account\"), React.createElement(Link, {\n    to: \"/categories\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }, \"Categories\"), React.createElement(Link, {\n    to: \"/notes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168\n    },\n    __self: this\n  }, \"Notes\"), React.createElement(Link, {\n    to: \"#\",\n    onClick: function onClick() {\n      handleLogout(); //inline function\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, \"Logout\"))), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    component: Home,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/users/register\",\n    component: Register,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/users/login\",\n    component: Login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/users/account\",\n    component: Account,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/categories\",\n    component: CategoriesList,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/categories/new\",\n    component: CategoriesNew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/categories/edit/:id\",\n    component: CategoriesEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/categories/:id\",\n    component: CategoriesShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/notes\",\n    component: NotesList,\n    exact: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/notes/new\",\n    component: NotesNew,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/notes/edit/:id\",\n    component: NotesEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/notes/:id\",\n    component: NotesShow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  })));\n} //we need to read the data (user obj ) from the redux store\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //now we have access to the state value\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps)(App); //<Switch> is like a switch case whenever a certain condition is met it will execute the code n break it","map":{"version":3,"sources":["E:/LAVANYA-DCT-FINAL-PROJECTS21/new-updated_notesapp-master/client/src/App.js"],"names":["React","Link","BrowserRouter","Route","Switch","connect","startLogout","Home","Register","Login","Account","CategoriesList","CategoriesShow","CategoriesNew","CategoriesEdit","NotesList","NotesShow","NotesNew","NotesEdit","App","props","console","log","handleLogout","status","window","confirm","dispatch","Object","keys","user","length","mapStateToProps","state"],"mappings":"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","sourcesContent":["// import React from 'react'\n// import NotesList from './note/List'\n// function App(){\n// return(\n//     <div>\n//         <h2>Note App</h2>\n//         <NotesList/>\n//     </div>\n// )\n// }\n// export default App\n\n\n//Referal code to be added\n// import React from 'react'\n// import { BrowserRouter, Route, Link,Switch} from 'react-router-dom'\n// import {connect} from 'react-redux'\n\n// import CategoriesList from './components/Categories/CategoriesList'\n// import CategoriesNew from './components/Categories/CategoriesNew'\n// import CategoriesEdit from './components/Categories/CategoriesEdit'\n// import CategoriesShow from './components/Categories/CategoriesShow'\n\n// import NotesList from './components/Notes/NotesList'\n// import NotesNew from './components/Notes/NoteNew'\n// import NotesEdit from './components/Notes/NotesEdit'\n// import NotesShow from './components/Notes/NoteShow'\n\n// import Home from './components/Users/Home'\n// import Register from './components/Users/Register'\n// import Login from './components/Users/Login'\n// import Account from './components/Users/Account'\n\n// import { startLogout } from './actions/userAction'\n\n\n// function App(props){\n//     console.log('app',props)\n\n    // const handleLogout = () => {\n    //     const status = window.confirm('are you sure to logout')\n    //     if(status){\n    //     props.dispatch(startLogout())\n    //     }\n    //   }\n\n// return(\n//     <BrowserRouter>\n//      {console.log(\"props\",props.user)}\n//     <div>\n//     <h2>WELCOME TO NOTES APP</h2>\n//     <Link to=\"/\">Home</Link>\n     \n\n//      {/* <Link to='/categories'>categories</Link>\n//      <Link to='/notes'>Notes</Link> */}\n\n    //  {\n    //                 Object.keys(props.user).length == 0 ? (\n    //                     <div>\n    //                        <Link to=\"/register\">Register</Link>\n    //                        <Link to=\"/login\">Login</Link> \n    //                         {/* <Login /> */}\n    //                     </div>\n    //                 ) : (\n    //                         <div>\n    //                             <Link to=\"/account\">Account</Link>\n    //                             {/* <Link to='/notes'>Notes</Link> */}\n    //                              <Link to='/categories'>Categories</Link>\n    //                              <Link to='/notes'>Notes</Link>\n                               \n    //                             <Link to=\"#\" onClick={()=>{\n    //                                 handleLogout()//inline function\n    //                             }}>Logout</Link>\n    //                         </div>\n    //                     )\n    //             }\n\n  \n\n//      </div>\n\n//     <Switch>\n  \n//      <Route path=\"/\" component={Home} exact={true} />\n     \n\n//      <Route path=\"/register\" component={Register} exact={true} />\n//       <Route path=\"/login\" component={Login} />\n//       <Route path=\"/account\" component={Account} />\n    \n//      <Route path=\"/categories\" component={CategoriesList} exact={true} />\n//      <Route path=\"/categories/new\" component={CategoriesNew}/>\n     \n//      <Route path='/notes' component={NotesList} exact={true}/>\n//      <Route path=\"/notes/new\" component={NotesNew}/>\n\n//      <Route path=\"/categories/edit/:id\" component={CategoriesEdit} />\n//      {/* <Route path=\"/categories/:id\" component={CategoriesShow} /> */}\n\n//      <Route path=\"/notes/edit/:id\" component={NotesEdit} />\n//      {/* <Route path=\"/notes/:id\" component={NotesShow} /> */}\n\n\n//      </Switch>\n//     </BrowserRouter>\n// )\n// }\n// const mapStateToProps = (state) => {\n//     return {\n//       user : state.user\n//     }\n//   }\n  \n//   export default connect(mapStateToProps)(App)\n\nimport React from 'react'\nimport {Link,BrowserRouter,Route,Switch} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport {startLogout} from './actions/userAction'\n\n//users imports\nimport Home from './components/Users/Home'\nimport Register from './components/Users/Register'\nimport Login from './components/Users/Login'\nimport Account from './components/Users/Account'\n\n//categories import\nimport CategoriesList from './components/Categories/CategoriesList'//1)list\nimport CategoriesShow from './components/Categories/CategoriesShow'//2)show\nimport CategoriesNew from './components/Categories/CategoriesNew' //3)New\nimport CategoriesEdit from './components/Categories/CategoriesEdit'//4)Edit\n\nimport NotesList from './components/Notes/NotesList'\nimport NotesShow from './components/Notes/NoteShow'\nimport NotesNew from './components/Notes/NoteNew'\nimport NotesEdit from './components/Notes/NotesEdit'\n\nfunction App(props){\n    console.log('App Component Props',props)\n\n    const handleLogout=()=>{\n        const status = window.confirm('are you sure to logout')\n        if(status){\n        props.dispatch(startLogout())\n        }\n    }\n    \n    return(\n        <BrowserRouter>\n        <div>\n            <h2>Welcome to App Component</h2>\n            <Link to=\"/\">Home</Link>\n\n       {\n        //conditinal rendering to chk whether user has logged in  or not\n        //if user obj is empty means user has not logged in so we need to show only register n login(user object is 0 for the very first time)\n        Object.keys(props.user).length==0 ? (\n            <div>\n               <Link to=\"/users/register\">Register</Link>\n               <Link to=\"/users/login\">Login</Link>\n            </div>\n\n        ):(//if the user obj is not empty ie we get some value(user obj value) then user has logged in to the application n the length is 3 username ,email n password\n            <div>\n                <Link to=\"/users/account\">Account</Link>\n                <Link to=\"/categories\">Categories</Link>\n                <Link to='/notes'>Notes</Link>\n\n                <Link to=\"#\" onClick={()=>{handleLogout()//inline function\n                 }}>Logout</Link>\n            </div>\n\n        )\n     }\n</div>\n\n<Switch>\n<Route path=\"/\" component={Home} exact={true} />\n<Route path=\"/users/register\" component={Register} exact={true}/>\n<Route path=\"/users/login\" component={Login}/>\n\n<Route path=\"/users/account\" component={Account}/>\n\n<Route path=\"/categories\" component={CategoriesList} exact={true} />\n<Route path=\"/categories/new\" component={CategoriesNew}/>\n<Route path=\"/categories/edit/:id\" component={CategoriesEdit} />\n<Route path=\"/categories/:id\" component={CategoriesShow} />\n\n<Route path='/notes' component={NotesList} exact={true}/>\n<Route path=\"/notes/new\" component={NotesNew}/>\n<Route path=\"/notes/edit/:id\" component={NotesEdit} />\n<Route path=\"/notes/:id\" component={NotesShow} />\n\n</Switch>         \n</BrowserRouter> \n)\n    \n}\n\n//we need to read the data (user obj ) from the redux store\nconst mapStateToProps=(state)=>{//now we have access to the state value\n    return {\n         user : state.user\n    }\n\n}\n\nexport default connect(mapStateToProps)(App)\n\n//<Switch> is like a switch case whenever a certain condition is met it will execute the code n break it"]},"metadata":{},"sourceType":"module"}